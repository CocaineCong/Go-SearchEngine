version: '3.7'

networks:
  search_engine:
    driver: bridge

services:
  mysql:
    container_name: mysql
    image: mysql:latest
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=search_engine
      - MYSQL_USER=search_engine
      - MYSQL_PASSWORD=search_engine
      - TZ=Asia/Shanghai
    volumes:
      - ./config/sql:/docker-entrypoint-initdb.d/
    ports:
      - "3306:3306"
    networks:
      - search_engine

  redis:
    container_name: redis
    image: redis
    restart: always
    environment:
      - REDIS_PASSWORD=123456
      - ALLOW_EMPTY_PASSWORD=no
    volumes:
      - /usr/local/redis:/usr/local/redis
    ports:
      - "6379:6379"
    networks:
      - search_engine

  jaeger:
    container_name: jaeger
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"
    restart: always
    networks:
      - search_engine

  etcd-micro:
    image: quay.io/coreos/etcd:v3.5.5
    container_name: etcd-micro
    restart: always
    privileged: true
    ports:
      - "3379:2379"
    environment:
      - ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379
      - ETCD_ADVERTISE_CLIENT_URLS=http://0.0.0.0:2379
      - "ALLOW_NONE_AUTHENTICATION=yes"
      - ETCD_API=3
      - ETCD_CERT_FILE="/path/to/server.crt"
      - ETCD_KEY_FILE="/path/to/server.key"
      - ETCD_AUTH="simple"
      - ETCD_AUTH_USER="tangseng"
      - ETCD_AUTH_PASSWORD="tangseng"
    networks:
      - search_engine

  etcd-keeper:
    image: "evildecay/etcdkeeper:latest"
    container_name: etcd-keeper
    environment:
      - ETCD_HOSTS=http://etcd-micro:3379
      - SW_STORAGE_ETCD_CLUSTER_NODES=etcd-micro:3379
      - HOST=127.0.0.1
      - HOSTNAME=etcd-keeper
    links:
      - etcd-micro
    ports:
      - "8080:8080"
    networks:
      - search_engine

  elasticsearch:
    image: elasticsearch:8.4.2
    container_name: elasticsearch
    environment:
      bootstrap.memory_lock: "true"
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
      discovery.type: single-node
      ingest.geoip.downloader.enabled: "false"
      TZ: Asia/Shanghai
      xpack.security.enabled: "false"
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost:9200/_cluster/health || exit 1"] #⼼跳检测，成功之后不再执⾏后⾯的退出
      interval: 60s #⼼跳检测间隔周期
      timeout: 10s
      retries: 3
      start_period: 60s #⾸次检测延迟时间
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - /usr/local/elasticsearch/data:/usr/local/elasticsearch/data
      - /usr/local/elasticsearch/config/es/config:/usr/local/elasticsearch/config
    ports:
      - "9200:9200"
    restart: always
    networks:
      - search_engine

  kibana:
    image: kibana:8.4.2
    container_name: kibana
    environment:
      - I18N_LOCALE=zh-CN
      - XPACK_GRAPH_ENABLED=true
      - TIMELION_ENABLED=true
      - XPACK_MONITORING_COLLECTION_ENABLED="true"
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
    networks:
      - search_engine

#  starrocks: # TODO 后面加上starrocks
#    images: starrock.docker.scarf.sh/starrock/allin1-ubuntu
#    restart: on-failure
#    container_name: "starrock"
#    ports:
#      - "8030:8030"
#      - "9030:9030"
#      - "8040:8040"
#    volumes:
#      - ./starrock/fe/meta:/opt/apache-doris/fe/meta
#      - ./starrock/fe/log:/data/deploy/starrock/fe/log
#      - ./starrock/be/storage:/data/deploy/starrock/be/storage
#      - ./starrock/be/log:/data/deploy/starrock/be/log
#      - ./initdb.d:/docker-entrypoint-initdb.d/
#    networks:
#      - search_engine
